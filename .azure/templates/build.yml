steps:
- checkout: Content
- checkout: self
  clean: true
  fetchDepth: 1

- task: qetza.replacetokens.replacetokens-task.replacetokens@3
  displayName: 'Replace tokens in env'
  inputs:
    targetFiles: .env.template
    escapeType: none
    tokenPrefix: '#{'
    tokenSuffix: '}'
    actionOnMissing: fail

- script: ls && cd SSW.Rules && ls
  displayName: show location

- script: yarn cache dir
  displayName: show yarn cache dir

- task: Cache@2
  displayName: Cache Yarn packages
  inputs:
    key: 'yarn | "$(Agent.OS)" | yarn.lock'
    restoreKeys: |
      yarn | "$(Agent.OS)"
      yarn
    path: /SSW.Rules/home/vsts/.cache/yarn/v6

- task: Cache@2
  displayName: Cache Gatsby .cache
  condition: and(succeeded(), eq(variables['GATSBY_CACHE'], 'TRUE'))
  inputs:
    key: 'gatsby_cache | "$(Agent.OS)"'
    restoreKeys: |
      gatsby_cache | "$(Agent.OS)"
    path: /SSW.Rules/$(Build.SourcesDirectory)/.cache

- task: Cache@2
  displayName: Cache Gatsby public
  condition: and(succeeded(), eq(variables['GATSBY_CACHE'], 'TRUE'))
  inputs:
    key: 'gatsby_public | "$(Agent.OS)"'
    restoreKeys: |
      gatsby_public | "$(Agent.OS)"
    path: /SSW.Rules/$(Build.SourcesDirectory)/public

- task: UseNode@1
  workingDirectory: /SSW.Rules
  inputs:
    version: '14.16.x'

- script: yarn install --frozen-lockfile
  workingDirectory: /SSW.Rules
  displayName: yarn install

- script: yarn lint
  workingDirectory: /SSW.Rules
  displayName: yarn lint

- script: |
    mv .env.template .env.production
    cat .env.production
  displayName: 'Rename env file'
  workingDirectory: /SSW.Rules

- script: GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES=true yarn build
  workingDirectory: /SSW.Rules
  displayName: yarn build:incremental

- task: ArchiveFiles@2
  workingDirectory: /SSW.Rules
  inputs:
    rootFolderOrFile: 'public'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/public.zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  workingDirectory: /SSW.Rules
  displayName: 'Publish Artifact: drop'
  inputs:
    PathtoPublish: $(Build.ArtifactStagingDirectory)
