name: Template - deploy site

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
        description: 'The environment to deploy to'
      storageAccountName:
        type: string
        required: false
        description: 'A custom appendage for the storage account name'

permissions:
  id-token: write
  contents: read

jobs:
  deploy-infra:
    name: Infra
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      sha: ${{ github.sha }}
    outputs:
      storageAccountName: ${{ steps.deploy.outputs.storageAccountName }}
      staticWebsiteUrl: ${{ steps.deploy.outputs.staticWebsiteUrl }}
    steps:
      - name: Download infra artifact
        uses: actions/download-artifact@v4
        with:
          name: infra
          path: infra

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Generate SHA
        run: echo "sha=${GITHUB_SHA:0:7}" >> $GITHUB_ENV
        env:
          GITHUB_SHA: ${{ github.sha }}

      - name: Deploy infra
        run: |
          az deployment group create \
            --name ${{ env.sha }} \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --template-file infra/main.bicep \
            --parameters \
              customStorageAccountNames=${{ inputs.storageAccountName }} \
              environmentName=${{ inputs.environment }} \
            --mode Incremental
      
      - name: Get deployment outputs
        id: deploy
        run: |
          STORAGE_ACCOUNT_NAME=$(az deployment group show --name ${{ env.sha }} --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --query properties.outputs.storageAccountName.value -o tsv)
          echo "Storage Account Name: $STORAGE_ACCOUNT_NAME"
          
          STATIC_WEBSITE_URL=$(az storage account show --name $STORAGE_ACCOUNT_NAME --query primaryEndpoints.web -o tsv)
          echo "Static Website URL: $STATIC_WEBSITE_URL"

          echo "storageAccountName=$STORAGE_ACCOUNT_NAME" >> $GITHUB_OUTPUT
          echo "staticWebsiteUrl=$STATIC_WEBSITE_URL" >> $GITHUB_OUTPUT

  deploy:
    name: Site
    needs: deploy-infra
    runs-on: ubuntu-latest
    environment: 
      name: ${{ inputs.environment }}
      url: ${{ needs.deploy-infra.outputs.staticWebsiteUrl }}/rules
    steps:
      - name: Download code artifact
        uses: actions/download-artifact@v4
        with:
          name: build
          path: rules

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Upload files to Azure storage
        run: |
          sas=$(az storage account generate-sas \
            --account-name ${{ needs.deploy-infra.outputs.storageAccountName }} \
            --expiry $(date -d "tomorrow" +%Y-%m-%d) \
            --permissions acdlrw \
            --resource-types sco \
            --services b \
            --https-only \
            --output tsv \
          )
          azcopy sync \
            ${{ github.workspace }} \
            "https://${{ needs.deploy-infra.outputs.storageAccountName }}.blob.core.windows.net/\$web/?$sas" \
            --log-level="ERROR" \
            --compare-hash=MD5 --put-md5 --delete-destination=true
        env:
          AZCOPY_CONCURRENCY_VALUE: 256
          AZCOPY_PARALLEL_STAT_FILES: true
          AZCOPY_CONCURRENT_SCAN: 256
